version: '3'

tasks:
  start:
    desc: Démarre tous les conteneurs
    cmds:
      - docker-compose up -d

  stop:
    desc: Arrête tous les conteneurs
    cmds:
      - docker-compose down

  build:
    desc: Met à jour les images docker distantes présentes dans les dockerfiles (à lancer une fois/semaine)
    cmds: 
      - docker-compose build --no-cache

  install:
    desc: Installe les dépendances pour le frontend et le backend
    cmds:
      - docker-compose exec frontend npm install
      - docker-compose exec backend pip install -r requirements.txt

  test-unit-back:
    desc: Lance les tests unitaires du backend
    cmds:
      - docker-compose exec backend python manage.py test authentification.tests.test_authentication my_docker_django_app.tests.api.test_section my_docker_django_app.tests.api.test_module

  integration-test-pytest:
    - docker-compose exec backend pytest my_docker_django_app/tests/integration_model

  test-e2e-playwright:
    desc: Lance les tests e2e
    cmds:
      - cd Front && cd my_front_app && npx playwright test tests/e2e/login.spec.ts

  test-unit-front:
    desc: Lance les tests unitaires du frontend
    cmds:
      - cd Front && cd my_front_app && npx jest test 

  logs:
    desc: Affiche les logs des conteneurs
    cmds:
      - docker-compose logs -f

  front-server:
    desc: Lance le server front
    cmds: 
      - cd Front && cd my_front_app && npm run dev
      
  #FIXME à voir les commandes n'ont pas l'air de fonctionner via task
  # makemigrations:
  # desc: Prépare les migrations à envoyer en base de données
  # cmds:
  #   - docker-compose exec backend python manage.py makemigrations
  # migrate:
  # desc: envoie les migrations vers la base de données
  # cmds:
  #   - docker-compose exec backend python manage.py migrate